// <auto-generated />
using System;
using Marketplace.SaaS.Accelerator.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Marketplace.SaaS.Accelerator.DataAccess.Migrations
{
    [DbContext(typeof(SaasKitContext))]
    partial class SaasKitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.ApplicationConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ApplicationConfiguration");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.ApplicationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActionTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("LogDetail")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(4000)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationLog");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.DatabaseVersionHistory", b =>
                {
                    b.Property<string>("ChangeLog")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("VersionNumber")
                        .HasColumnType("numeric(6,2)");

                    b.ToTable("DatabaseVersionHistory");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bcc")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("BCC");

                    b.Property<string>("Cc")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("CC");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Status")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Subject")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("TemplateBody")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("ToRecipients")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Events", b =>
                {
                    b.Property<int>("EventsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EventsId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("EventsName")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.HasKey("EventsId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.KnownUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("KnownUsers");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredAuditLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("RequestJson")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ResponseJson")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("RunBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("StatusCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SubscriptionUsageDate")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("MeteredAuditLogs");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Dimension")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("character varying(150)");

                    b.Property<int?>("PlanId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("MeteredDimensions");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredPlanSchedulerManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DimensionId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int?>("FrequencyId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime?>("NextRunTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PlanId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<double?>("Quantity")
                        .IsRequired()
                        .HasColumnType("double precision");

                    b.Property<string>("SchedulerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DimensionId");

                    b.HasIndex("FrequencyId");

                    b.HasIndex("PlanId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("MeteredPlanSchedulerManagement");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.OfferAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<int?>("DisplaySequence")
                        .HasColumnType("integer");

                    b.Property<bool>("FromList")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean");

                    b.Property<int?>("Max")
                        .HasColumnType("integer");

                    b.Property<int?>("Min")
                        .HasColumnType("integer");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uuid");

                    b.Property<string>("ParameterId")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("Type")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("ValueTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("ValuesList")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OfferAttributes");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Offers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("OfferGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("OfferGUId");

                    b.Property<string>("OfferId")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("OfferName")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.PlanAttributeMapping", b =>
                {
                    b.Property<int>("PlanAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlanAttributeId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<int>("OfferAttributeId")
                        .HasColumnType("integer")
                        .HasColumnName("OfferAttributeID");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("PlanAttributeId")
                        .HasName("PK__PlanAttr__8B476A98C058FAF2");

                    b.ToTable("PlanAttributeMapping");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.PlanAttributeOutput", b =>
                {
                    b.Property<int>("RowNumber")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<int>("OfferAttributeId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanAttributeId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.HasKey("RowNumber")
                        .HasName("PK__PlanAttr__AAAC09D888FE3E40");

                    b.ToTable("PlanAttributeOutput");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.PlanEventsMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CopyToCustomer")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<string>("FailureStateEmails")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("SuccessStateEmails")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PlanEventsMapping");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.PlanEventsOutPut", b =>
                {
                    b.Property<int>("RowNumber")
                        .HasColumnType("integer");

                    b.Property<bool?>("CopyToCustomer")
                        .HasColumnType("boolean");

                    b.Property<int>("EventId")
                        .HasColumnType("integer");

                    b.Property<string>("EventsName")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("FailureStateEmails")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    b.Property<bool>("Isactive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<string>("SuccessStateEmails")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.HasKey("RowNumber")
                        .HasName("PK__PlanEven__AAAC09D8C9229532");

                    b.ToTable("PlanEventsOutPut");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Plans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<bool?>("IsPerUser")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsmeteringSupported")
                        .HasColumnType("boolean");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uuid")
                        .HasColumnName("OfferID");

                    b.Property<Guid>("PlanGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PlanGUID");

                    b.Property<string>("PlanId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SchedulerFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("SchedulerFrequency");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SchedulerManagerView", b =>
                {
                    b.Property<Guid>("AMPSubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Dimension")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("Frequency")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("NextRunTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PlanId")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("PurchaserEmail")
                        .HasColumnType("text");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<string>("SchedulerName")
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubscriptionName")
                        .HasColumnType("text");

                    b.ToView("SchedulerManagerView");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SubscriptionAttributeValues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uuid")
                        .HasColumnName("OfferID");

                    b.Property<int>("PlanAttributeId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid")
                        .HasColumnName("PlanID");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionAttributeValues");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SubscriptionAuditLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Attribute")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("NewValue")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("OldValue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("SubscriptionId")
                        .HasColumnType("integer")
                        .HasColumnName("SubscriptionID");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionAuditLogs");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SubscriptionEmailOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("Value")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.ToTable("SubscriptionEmailOutput");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SubscriptionParametersOutput", b =>
                {
                    b.Property<int>("RowNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<int>("DisplaySequence")
                        .HasColumnType("integer");

                    b.Property<bool>("FromList")
                        .HasColumnType("boolean");

                    b.Property<string>("Htmltype")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)")
                        .HasColumnName("HTMLType");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<int>("Max")
                        .HasColumnType("integer");

                    b.Property<int>("Min")
                        .HasColumnType("integer");

                    b.Property<int>("OfferAttributeId")
                        .HasColumnType("integer")
                        .HasColumnName("OfferAttributeID");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uuid");

                    b.Property<int>("PlanAttributeId")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<string>("ValuesList")
                        .IsRequired()
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.HasKey("RowNumber")
                        .HasName("PK__Subscrip__AAAC09D8BA727059");

                    b.ToTable("SubscriptionParametersOutput");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Subscriptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AmpOfferId")
                        .HasColumnType("text");

                    b.Property<string>("AmpplanId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("AMPPlanId");

                    b.Property<int>("Ampquantity")
                        .HasColumnType("integer")
                        .HasColumnName("AMPQuantity");

                    b.Property<Guid>("AmpsubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("AMPSubscriptionId")
                        .HasDefaultValueSql("(uuid_generate_v4())");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PurchaserEmail")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.Property<Guid?>("PurchaserTenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubscriptionStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Term")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("character varying(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.ValueTypes", b =>
                {
                    b.Property<int>("ValueTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ValueTypeId"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp");

                    b.Property<string>("Htmltype")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)")
                        .HasColumnName("HTMLType");

                    b.Property<string>("ValueType")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.HasKey("ValueTypeId")
                        .HasName("PK__ValueTyp__A51E9C5AEA096123");

                    b.ToTable("ValueTypes");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.WebJobSubscriptionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uuid");

                    b.Property<string>("SubscriptionStatus")
                        .HasMaxLength(225)
                        .IsUnicode(false)
                        .HasColumnType("character varying(225)");

                    b.HasKey("Id");

                    b.ToTable("WebJobSubscriptionStatus");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.KnownUsers", b =>
                {
                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Roles", "Role")
                        .WithMany("KnownUsers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__KnownUser__RoleI__619B8048");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredAuditLogs", b =>
                {
                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Subscriptions", "Subscription")
                        .WithMany("MeteredAuditLogs")
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK__MeteredAu__Subsc__628FA481");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredDimensions", b =>
                {
                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Plans", "Plan")
                        .WithMany("MeteredDimensions")
                        .HasForeignKey("PlanId")
                        .HasConstraintName("FK__MeteredDi__PlanI__6383C8BA");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredPlanSchedulerManagement", b =>
                {
                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredDimensions", "MeteredDimensions")
                        .WithMany("MeteredPlanSchedulerManagements")
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.SchedulerFrequency", "SchedulerFrequency")
                        .WithMany("MeteredPlanSchedulerManagements")
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Plans", "Plan")
                        .WithMany("MeteredPlanSchedulerManagements")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Subscriptions", "Subscriptions")
                        .WithMany("MeteredPlanSchedulerManagements")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeteredDimensions");

                    b.Navigation("Plan");

                    b.Navigation("SchedulerFrequency");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SubscriptionAuditLogs", b =>
                {
                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Subscriptions", "Subscription")
                        .WithMany("SubscriptionAuditLogs")
                        .HasForeignKey("SubscriptionId")
                        .HasConstraintName("FK__Subscript__Subsc__6477ECF3");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Subscriptions", b =>
                {
                    b.HasOne("Marketplace.SaaS.Accelerator.DataAccess.Entities.Users", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Subscript__UserI__656C112C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.MeteredDimensions", b =>
                {
                    b.Navigation("MeteredPlanSchedulerManagements");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Plans", b =>
                {
                    b.Navigation("MeteredDimensions");

                    b.Navigation("MeteredPlanSchedulerManagements");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Roles", b =>
                {
                    b.Navigation("KnownUsers");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.SchedulerFrequency", b =>
                {
                    b.Navigation("MeteredPlanSchedulerManagements");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Subscriptions", b =>
                {
                    b.Navigation("MeteredAuditLogs");

                    b.Navigation("MeteredPlanSchedulerManagements");

                    b.Navigation("SubscriptionAuditLogs");
                });

            modelBuilder.Entity("Marketplace.SaaS.Accelerator.DataAccess.Entities.Users", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
